//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.17929 版自动生成。
// 
#pragma warning disable 1591

namespace gtxh_m.com.gtxh.iv {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserSoap", Namespace="http://tempuri.org/")]
    public partial class User : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegNewUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegNewUser_appOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsmbExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMobileListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMobileListByTags_AnalystsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMobileListByTagsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback Login_AppOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePassWordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePwdByPhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserImforOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPubImforOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterByWJWMIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegNewUser_WechatOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOpenidOperationCompleted;
        
        private System.Threading.SendOrPostCallback Login_WechatOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsSetOpenidOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOpenidOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public User() {
            this.Url = global::gtxh_m.Properties.Settings.Default.gtxh_m_com_gtxh_ivtest_User;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event RegNewUserCompletedEventHandler RegNewUserCompleted;
        
        /// <remarks/>
        public event RegNewUser_appCompletedEventHandler RegNewUser_appCompleted;
        
        /// <remarks/>
        public event IsmbExistCompletedEventHandler IsmbExistCompleted;
        
        /// <remarks/>
        public event GetMobileListCompletedEventHandler GetMobileListCompleted;
        
        /// <remarks/>
        public event GetMobileListByTags_AnalystsCompletedEventHandler GetMobileListByTags_AnalystsCompleted;
        
        /// <remarks/>
        public event GetMobileListByTagsCompletedEventHandler GetMobileListByTagsCompleted;
        
        /// <remarks/>
        public event GetUserLevelCompletedEventHandler GetUserLevelCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event Login_AppCompletedEventHandler Login_AppCompleted;
        
        /// <remarks/>
        public event ChangePassWordCompletedEventHandler ChangePassWordCompleted;
        
        /// <remarks/>
        public event ChangePwdByPhoneCompletedEventHandler ChangePwdByPhoneCompleted;
        
        /// <remarks/>
        public event ChangeUserImforCompletedEventHandler ChangeUserImforCompleted;
        
        /// <remarks/>
        public event GetUserPubImforCompletedEventHandler GetUserPubImforCompleted;
        
        /// <remarks/>
        public event GetBalanceCompletedEventHandler GetBalanceCompleted;
        
        /// <remarks/>
        public event RegisterByWJWMIdCompletedEventHandler RegisterByWJWMIdCompleted;
        
        /// <remarks/>
        public event RegNewUser_WechatCompletedEventHandler RegNewUser_WechatCompleted;
        
        /// <remarks/>
        public event AddOpenidCompletedEventHandler AddOpenidCompleted;
        
        /// <remarks/>
        public event Login_WechatCompletedEventHandler Login_WechatCompleted;
        
        /// <remarks/>
        public event IsSetOpenidCompletedEventHandler IsSetOpenidCompleted;
        
        /// <remarks/>
        public event DeleteOpenidCompletedEventHandler DeleteOpenidCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Register", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Register(string key, string mobilePhone, string userName, string companyName, string email, string province, string city, string phone, string sorts, string companyUrl) {
            object[] results = this.Invoke("Register", new object[] {
                        key,
                        mobilePhone,
                        userName,
                        companyName,
                        email,
                        province,
                        city,
                        phone,
                        sorts,
                        companyUrl});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string key, string mobilePhone, string userName, string companyName, string email, string province, string city, string phone, string sorts, string companyUrl) {
            this.RegisterAsync(key, mobilePhone, userName, companyName, email, province, city, phone, sorts, companyUrl, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string key, string mobilePhone, string userName, string companyName, string email, string province, string city, string phone, string sorts, string companyUrl, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        key,
                        mobilePhone,
                        userName,
                        companyName,
                        email,
                        province,
                        city,
                        phone,
                        sorts,
                        companyUrl}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegNewUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RegNewUser(string key, string mobilePhone, string userName, string companyName, string province) {
            object[] results = this.Invoke("RegNewUser", new object[] {
                        key,
                        mobilePhone,
                        userName,
                        companyName,
                        province});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegNewUserAsync(string key, string mobilePhone, string userName, string companyName, string province) {
            this.RegNewUserAsync(key, mobilePhone, userName, companyName, province, null);
        }
        
        /// <remarks/>
        public void RegNewUserAsync(string key, string mobilePhone, string userName, string companyName, string province, object userState) {
            if ((this.RegNewUserOperationCompleted == null)) {
                this.RegNewUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegNewUserOperationCompleted);
            }
            this.InvokeAsync("RegNewUser", new object[] {
                        key,
                        mobilePhone,
                        userName,
                        companyName,
                        province}, this.RegNewUserOperationCompleted, userState);
        }
        
        private void OnRegNewUserOperationCompleted(object arg) {
            if ((this.RegNewUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegNewUserCompleted(this, new RegNewUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegNewUser_app", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RegNewUser_app(string key, string mobilePhone) {
            object[] results = this.Invoke("RegNewUser_app", new object[] {
                        key,
                        mobilePhone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegNewUser_appAsync(string key, string mobilePhone) {
            this.RegNewUser_appAsync(key, mobilePhone, null);
        }
        
        /// <remarks/>
        public void RegNewUser_appAsync(string key, string mobilePhone, object userState) {
            if ((this.RegNewUser_appOperationCompleted == null)) {
                this.RegNewUser_appOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegNewUser_appOperationCompleted);
            }
            this.InvokeAsync("RegNewUser_app", new object[] {
                        key,
                        mobilePhone}, this.RegNewUser_appOperationCompleted, userState);
        }
        
        private void OnRegNewUser_appOperationCompleted(object arg) {
            if ((this.RegNewUser_appCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegNewUser_appCompleted(this, new RegNewUser_appCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsmbExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IsmbExist(string key, string mobilePhone) {
            object[] results = this.Invoke("IsmbExist", new object[] {
                        key,
                        mobilePhone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IsmbExistAsync(string key, string mobilePhone) {
            this.IsmbExistAsync(key, mobilePhone, null);
        }
        
        /// <remarks/>
        public void IsmbExistAsync(string key, string mobilePhone, object userState) {
            if ((this.IsmbExistOperationCompleted == null)) {
                this.IsmbExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsmbExistOperationCompleted);
            }
            this.InvokeAsync("IsmbExist", new object[] {
                        key,
                        mobilePhone}, this.IsmbExistOperationCompleted, userState);
        }
        
        private void OnIsmbExistOperationCompleted(object arg) {
            if ((this.IsmbExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsmbExistCompleted(this, new IsmbExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMobileList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo[] GetMobileList(string key, string ProvinceName, string sorts, string[] oldMobile) {
            object[] results = this.Invoke("GetMobileList", new object[] {
                        key,
                        ProvinceName,
                        sorts,
                        oldMobile});
            return ((UserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMobileListAsync(string key, string ProvinceName, string sorts, string[] oldMobile) {
            this.GetMobileListAsync(key, ProvinceName, sorts, oldMobile, null);
        }
        
        /// <remarks/>
        public void GetMobileListAsync(string key, string ProvinceName, string sorts, string[] oldMobile, object userState) {
            if ((this.GetMobileListOperationCompleted == null)) {
                this.GetMobileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMobileListOperationCompleted);
            }
            this.InvokeAsync("GetMobileList", new object[] {
                        key,
                        ProvinceName,
                        sorts,
                        oldMobile}, this.GetMobileListOperationCompleted, userState);
        }
        
        private void OnGetMobileListOperationCompleted(object arg) {
            if ((this.GetMobileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMobileListCompleted(this, new GetMobileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMobileListByTags_Analysts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMobileListByTags_Analysts(string key, string tags, int BeginIndex, int EndIndex, string strMobilePhone, ref int counts) {
            object[] results = this.Invoke("GetMobileListByTags_Analysts", new object[] {
                        key,
                        tags,
                        BeginIndex,
                        EndIndex,
                        strMobilePhone,
                        counts});
            counts = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMobileListByTags_AnalystsAsync(string key, string tags, int BeginIndex, int EndIndex, string strMobilePhone, int counts) {
            this.GetMobileListByTags_AnalystsAsync(key, tags, BeginIndex, EndIndex, strMobilePhone, counts, null);
        }
        
        /// <remarks/>
        public void GetMobileListByTags_AnalystsAsync(string key, string tags, int BeginIndex, int EndIndex, string strMobilePhone, int counts, object userState) {
            if ((this.GetMobileListByTags_AnalystsOperationCompleted == null)) {
                this.GetMobileListByTags_AnalystsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMobileListByTags_AnalystsOperationCompleted);
            }
            this.InvokeAsync("GetMobileListByTags_Analysts", new object[] {
                        key,
                        tags,
                        BeginIndex,
                        EndIndex,
                        strMobilePhone,
                        counts}, this.GetMobileListByTags_AnalystsOperationCompleted, userState);
        }
        
        private void OnGetMobileListByTags_AnalystsOperationCompleted(object arg) {
            if ((this.GetMobileListByTags_AnalystsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMobileListByTags_AnalystsCompleted(this, new GetMobileListByTags_AnalystsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMobileListByTags", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMobileListByTags(string key, string tags, int BeginIndex, int EndIndex, ref int counts) {
            object[] results = this.Invoke("GetMobileListByTags", new object[] {
                        key,
                        tags,
                        BeginIndex,
                        EndIndex,
                        counts});
            counts = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMobileListByTagsAsync(string key, string tags, int BeginIndex, int EndIndex, int counts) {
            this.GetMobileListByTagsAsync(key, tags, BeginIndex, EndIndex, counts, null);
        }
        
        /// <remarks/>
        public void GetMobileListByTagsAsync(string key, string tags, int BeginIndex, int EndIndex, int counts, object userState) {
            if ((this.GetMobileListByTagsOperationCompleted == null)) {
                this.GetMobileListByTagsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMobileListByTagsOperationCompleted);
            }
            this.InvokeAsync("GetMobileListByTags", new object[] {
                        key,
                        tags,
                        BeginIndex,
                        EndIndex,
                        counts}, this.GetMobileListByTagsOperationCompleted, userState);
        }
        
        private void OnGetMobileListByTagsOperationCompleted(object arg) {
            if ((this.GetMobileListByTagsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMobileListByTagsCompleted(this, new GetMobileListByTagsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserLevel(string key, int loginInfoID) {
            object[] results = this.Invoke("GetUserLevel", new object[] {
                        key,
                        loginInfoID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLevelAsync(string key, int loginInfoID) {
            this.GetUserLevelAsync(key, loginInfoID, null);
        }
        
        /// <remarks/>
        public void GetUserLevelAsync(string key, int loginInfoID, object userState) {
            if ((this.GetUserLevelOperationCompleted == null)) {
                this.GetUserLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLevelOperationCompleted);
            }
            this.InvokeAsync("GetUserLevel", new object[] {
                        key,
                        loginInfoID}, this.GetUserLevelOperationCompleted, userState);
        }
        
        private void OnGetUserLevelOperationCompleted(object arg) {
            if ((this.GetUserLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLevelCompleted(this, new GetUserLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string key, string phone, string pwd, string lastIp) {
            object[] results = this.Invoke("Login", new object[] {
                        key,
                        phone,
                        pwd,
                        lastIp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string key, string phone, string pwd, string lastIp) {
            this.LoginAsync(key, phone, pwd, lastIp, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string key, string phone, string pwd, string lastIp, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        key,
                        phone,
                        pwd,
                        lastIp}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login_App", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Login_App(string key, string phone, string pwd, string lastIp) {
            object[] results = this.Invoke("Login_App", new object[] {
                        key,
                        phone,
                        pwd,
                        lastIp});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Login_AppAsync(string key, string phone, string pwd, string lastIp) {
            this.Login_AppAsync(key, phone, pwd, lastIp, null);
        }
        
        /// <remarks/>
        public void Login_AppAsync(string key, string phone, string pwd, string lastIp, object userState) {
            if ((this.Login_AppOperationCompleted == null)) {
                this.Login_AppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogin_AppOperationCompleted);
            }
            this.InvokeAsync("Login_App", new object[] {
                        key,
                        phone,
                        pwd,
                        lastIp}, this.Login_AppOperationCompleted, userState);
        }
        
        private void OnLogin_AppOperationCompleted(object arg) {
            if ((this.Login_AppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Login_AppCompleted(this, new Login_AppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassWord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangePassWord(int loginID, string newPassWord, string a) {
            object[] results = this.Invoke("ChangePassWord", new object[] {
                        loginID,
                        newPassWord,
                        a});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePassWordAsync(int loginID, string newPassWord, string a) {
            this.ChangePassWordAsync(loginID, newPassWord, a, null);
        }
        
        /// <remarks/>
        public void ChangePassWordAsync(int loginID, string newPassWord, string a, object userState) {
            if ((this.ChangePassWordOperationCompleted == null)) {
                this.ChangePassWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePassWordOperationCompleted);
            }
            this.InvokeAsync("ChangePassWord", new object[] {
                        loginID,
                        newPassWord,
                        a}, this.ChangePassWordOperationCompleted, userState);
        }
        
        private void OnChangePassWordOperationCompleted(object arg) {
            if ((this.ChangePassWordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePassWordCompleted(this, new ChangePassWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePwdByPhone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangePwdByPhone(string mobilePhone, string newPassWord, string a) {
            object[] results = this.Invoke("ChangePwdByPhone", new object[] {
                        mobilePhone,
                        newPassWord,
                        a});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePwdByPhoneAsync(string mobilePhone, string newPassWord, string a) {
            this.ChangePwdByPhoneAsync(mobilePhone, newPassWord, a, null);
        }
        
        /// <remarks/>
        public void ChangePwdByPhoneAsync(string mobilePhone, string newPassWord, string a, object userState) {
            if ((this.ChangePwdByPhoneOperationCompleted == null)) {
                this.ChangePwdByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePwdByPhoneOperationCompleted);
            }
            this.InvokeAsync("ChangePwdByPhone", new object[] {
                        mobilePhone,
                        newPassWord,
                        a}, this.ChangePwdByPhoneOperationCompleted, userState);
        }
        
        private void OnChangePwdByPhoneOperationCompleted(object arg) {
            if ((this.ChangePwdByPhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePwdByPhoneCompleted(this, new ChangePwdByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeUserImfor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeUserImfor(UserImfor u, string a) {
            object[] results = this.Invoke("ChangeUserImfor", new object[] {
                        u,
                        a});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserImforAsync(UserImfor u, string a) {
            this.ChangeUserImforAsync(u, a, null);
        }
        
        /// <remarks/>
        public void ChangeUserImforAsync(UserImfor u, string a, object userState) {
            if ((this.ChangeUserImforOperationCompleted == null)) {
                this.ChangeUserImforOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserImforOperationCompleted);
            }
            this.InvokeAsync("ChangeUserImfor", new object[] {
                        u,
                        a}, this.ChangeUserImforOperationCompleted, userState);
        }
        
        private void OnChangeUserImforOperationCompleted(object arg) {
            if ((this.ChangeUserImforCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserImforCompleted(this, new ChangeUserImforCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserPubImfor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserImfor GetUserPubImfor(int loginInfoID, string a) {
            object[] results = this.Invoke("GetUserPubImfor", new object[] {
                        loginInfoID,
                        a});
            return ((UserImfor)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPubImforAsync(int loginInfoID, string a) {
            this.GetUserPubImforAsync(loginInfoID, a, null);
        }
        
        /// <remarks/>
        public void GetUserPubImforAsync(int loginInfoID, string a, object userState) {
            if ((this.GetUserPubImforOperationCompleted == null)) {
                this.GetUserPubImforOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPubImforOperationCompleted);
            }
            this.InvokeAsync("GetUserPubImfor", new object[] {
                        loginInfoID,
                        a}, this.GetUserPubImforOperationCompleted, userState);
        }
        
        private void OnGetUserPubImforOperationCompleted(object arg) {
            if ((this.GetUserPubImforCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPubImforCompleted(this, new GetUserPubImforCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserBalance GetBalance(int lid, string a) {
            object[] results = this.Invoke("GetBalance", new object[] {
                        lid,
                        a});
            return ((UserBalance)(results[0]));
        }
        
        /// <remarks/>
        public void GetBalanceAsync(int lid, string a) {
            this.GetBalanceAsync(lid, a, null);
        }
        
        /// <remarks/>
        public void GetBalanceAsync(int lid, string a, object userState) {
            if ((this.GetBalanceOperationCompleted == null)) {
                this.GetBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBalanceOperationCompleted);
            }
            this.InvokeAsync("GetBalance", new object[] {
                        lid,
                        a}, this.GetBalanceOperationCompleted, userState);
        }
        
        private void OnGetBalanceOperationCompleted(object arg) {
            if ((this.GetBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBalanceCompleted(this, new GetBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterByWJWMId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RegisterByWJWMId(string key, string mid) {
            object[] results = this.Invoke("RegisterByWJWMId", new object[] {
                        key,
                        mid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterByWJWMIdAsync(string key, string mid) {
            this.RegisterByWJWMIdAsync(key, mid, null);
        }
        
        /// <remarks/>
        public void RegisterByWJWMIdAsync(string key, string mid, object userState) {
            if ((this.RegisterByWJWMIdOperationCompleted == null)) {
                this.RegisterByWJWMIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterByWJWMIdOperationCompleted);
            }
            this.InvokeAsync("RegisterByWJWMId", new object[] {
                        key,
                        mid}, this.RegisterByWJWMIdOperationCompleted, userState);
        }
        
        private void OnRegisterByWJWMIdOperationCompleted(object arg) {
            if ((this.RegisterByWJWMIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterByWJWMIdCompleted(this, new RegisterByWJWMIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegNewUser_Wechat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RegNewUser_Wechat(string key, string mobilePhone, string loginPwd) {
            object[] results = this.Invoke("RegNewUser_Wechat", new object[] {
                        key,
                        mobilePhone,
                        loginPwd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegNewUser_WechatAsync(string key, string mobilePhone, string loginPwd) {
            this.RegNewUser_WechatAsync(key, mobilePhone, loginPwd, null);
        }
        
        /// <remarks/>
        public void RegNewUser_WechatAsync(string key, string mobilePhone, string loginPwd, object userState) {
            if ((this.RegNewUser_WechatOperationCompleted == null)) {
                this.RegNewUser_WechatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegNewUser_WechatOperationCompleted);
            }
            this.InvokeAsync("RegNewUser_Wechat", new object[] {
                        key,
                        mobilePhone,
                        loginPwd}, this.RegNewUser_WechatOperationCompleted, userState);
        }
        
        private void OnRegNewUser_WechatOperationCompleted(object arg) {
            if ((this.RegNewUser_WechatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegNewUser_WechatCompleted(this, new RegNewUser_WechatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOpenid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddOpenid(string key, string phone, string pwd, string openid) {
            object[] results = this.Invoke("AddOpenid", new object[] {
                        key,
                        phone,
                        pwd,
                        openid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddOpenidAsync(string key, string phone, string pwd, string openid) {
            this.AddOpenidAsync(key, phone, pwd, openid, null);
        }
        
        /// <remarks/>
        public void AddOpenidAsync(string key, string phone, string pwd, string openid, object userState) {
            if ((this.AddOpenidOperationCompleted == null)) {
                this.AddOpenidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOpenidOperationCompleted);
            }
            this.InvokeAsync("AddOpenid", new object[] {
                        key,
                        phone,
                        pwd,
                        openid}, this.AddOpenidOperationCompleted, userState);
        }
        
        private void OnAddOpenidOperationCompleted(object arg) {
            if ((this.AddOpenidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOpenidCompleted(this, new AddOpenidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login_Wechat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Login_Wechat(string key, string openid) {
            object[] results = this.Invoke("Login_Wechat", new object[] {
                        key,
                        openid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Login_WechatAsync(string key, string openid) {
            this.Login_WechatAsync(key, openid, null);
        }
        
        /// <remarks/>
        public void Login_WechatAsync(string key, string openid, object userState) {
            if ((this.Login_WechatOperationCompleted == null)) {
                this.Login_WechatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogin_WechatOperationCompleted);
            }
            this.InvokeAsync("Login_Wechat", new object[] {
                        key,
                        openid}, this.Login_WechatOperationCompleted, userState);
        }
        
        private void OnLogin_WechatOperationCompleted(object arg) {
            if ((this.Login_WechatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Login_WechatCompleted(this, new Login_WechatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsSetOpenid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsSetOpenid(string key, string Openid) {
            object[] results = this.Invoke("IsSetOpenid", new object[] {
                        key,
                        Openid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsSetOpenidAsync(string key, string Openid) {
            this.IsSetOpenidAsync(key, Openid, null);
        }
        
        /// <remarks/>
        public void IsSetOpenidAsync(string key, string Openid, object userState) {
            if ((this.IsSetOpenidOperationCompleted == null)) {
                this.IsSetOpenidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsSetOpenidOperationCompleted);
            }
            this.InvokeAsync("IsSetOpenid", new object[] {
                        key,
                        Openid}, this.IsSetOpenidOperationCompleted, userState);
        }
        
        private void OnIsSetOpenidOperationCompleted(object arg) {
            if ((this.IsSetOpenidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsSetOpenidCompleted(this, new IsSetOpenidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOpenid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOpenid(string key, string Openid) {
            object[] results = this.Invoke("DeleteOpenid", new object[] {
                        key,
                        Openid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOpenidAsync(string key, string Openid) {
            this.DeleteOpenidAsync(key, Openid, null);
        }
        
        /// <remarks/>
        public void DeleteOpenidAsync(string key, string Openid, object userState) {
            if ((this.DeleteOpenidOperationCompleted == null)) {
                this.DeleteOpenidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOpenidOperationCompleted);
            }
            this.InvokeAsync("DeleteOpenid", new object[] {
                        key,
                        Openid}, this.DeleteOpenidOperationCompleted, userState);
        }
        
        private void OnDeleteOpenidOperationCompleted(object arg) {
            if ((this.DeleteOpenidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOpenidCompleted(this, new DeleteOpenidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserInfo {
        
        private int loginInforIDField;
        
        private string userNameField;
        
        private string mobilePhoneField;
        
        /// <remarks/>
        public int LoginInforID {
            get {
                return this.loginInforIDField;
            }
            set {
                this.loginInforIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserBalance {
        
        private decimal usefulMoneyField;
        
        private decimal freezeMoneyField;
        
        private decimal realMoneyField;
        
        /// <remarks/>
        public decimal UsefulMoney {
            get {
                return this.usefulMoneyField;
            }
            set {
                this.usefulMoneyField = value;
            }
        }
        
        /// <remarks/>
        public decimal FreezeMoney {
            get {
                return this.freezeMoneyField;
            }
            set {
                this.freezeMoneyField = value;
            }
        }
        
        /// <remarks/>
        public decimal RealMoney {
            get {
                return this.realMoneyField;
            }
            set {
                this.realMoneyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserImfor {
        
        private int loginInfoIDField;
        
        private string userNameField;
        
        private string companeyNameField;
        
        private string emailField;
        
        private string provinceField;
        
        private string cityField;
        
        private string adressField;
        
        private string faxField;
        
        private string phoneField;
        
        private string mobilePhoneField;
        
        private string regSourceField;
        
        private string sortsField;
        
        private int isValField;
        
        private string licenseIDField;
        
        private decimal qIBValueField;
        
        /// <remarks/>
        public int LoginInfoID {
            get {
                return this.loginInfoIDField;
            }
            set {
                this.loginInfoIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string CompaneyName {
            get {
                return this.companeyNameField;
            }
            set {
                this.companeyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Province {
            get {
                return this.provinceField;
            }
            set {
                this.provinceField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Adress {
            get {
                return this.adressField;
            }
            set {
                this.adressField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string RegSource {
            get {
                return this.regSourceField;
            }
            set {
                this.regSourceField = value;
            }
        }
        
        /// <remarks/>
        public string Sorts {
            get {
                return this.sortsField;
            }
            set {
                this.sortsField = value;
            }
        }
        
        /// <remarks/>
        public int IsVal {
            get {
                return this.isValField;
            }
            set {
                this.isValField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal QIBValue {
            get {
                return this.qIBValueField;
            }
            set {
                this.qIBValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegNewUserCompletedEventHandler(object sender, RegNewUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegNewUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegNewUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegNewUser_appCompletedEventHandler(object sender, RegNewUser_appCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegNewUser_appCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegNewUser_appCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsmbExistCompletedEventHandler(object sender, IsmbExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsmbExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsmbExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMobileListCompletedEventHandler(object sender, GetMobileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMobileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMobileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMobileListByTags_AnalystsCompletedEventHandler(object sender, GetMobileListByTags_AnalystsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMobileListByTags_AnalystsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMobileListByTags_AnalystsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int counts {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMobileListByTagsCompletedEventHandler(object sender, GetMobileListByTagsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMobileListByTagsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMobileListByTagsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int counts {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserLevelCompletedEventHandler(object sender, GetUserLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Login_AppCompletedEventHandler(object sender, Login_AppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Login_AppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Login_AppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangePassWordCompletedEventHandler(object sender, ChangePassWordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePassWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePassWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangePwdByPhoneCompletedEventHandler(object sender, ChangePwdByPhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePwdByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePwdByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangeUserImforCompletedEventHandler(object sender, ChangeUserImforCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserImforCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserImforCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserPubImforCompletedEventHandler(object sender, GetUserPubImforCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPubImforCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPubImforCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserImfor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserImfor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBalanceCompletedEventHandler(object sender, GetBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserBalance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserBalance)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegisterByWJWMIdCompletedEventHandler(object sender, RegisterByWJWMIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterByWJWMIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterByWJWMIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegNewUser_WechatCompletedEventHandler(object sender, RegNewUser_WechatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegNewUser_WechatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegNewUser_WechatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddOpenidCompletedEventHandler(object sender, AddOpenidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOpenidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOpenidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Login_WechatCompletedEventHandler(object sender, Login_WechatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Login_WechatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Login_WechatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsSetOpenidCompletedEventHandler(object sender, IsSetOpenidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsSetOpenidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsSetOpenidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteOpenidCompletedEventHandler(object sender, DeleteOpenidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOpenidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOpenidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591