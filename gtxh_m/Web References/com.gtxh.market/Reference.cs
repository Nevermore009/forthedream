//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.17929 版自动生成。
// 
#pragma warning disable 1591

namespace gtxh_m.com.gtxh.market {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MarketAppServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MarketAppService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ToOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResourceDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYieldlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback MarketResourceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback MarketResourceListOfYieldlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback MyMarketResourceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DirectResourceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback FbResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FbDirectResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DirectToOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback OutOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ToBeConfirmedOrderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompanyInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderHistoryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResourceOrderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadCredentialOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderHistoryDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback TradeOrderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ToTradeOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback BaoBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDirectResourceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistMarketOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MarketAppService() {
            this.Url = global::gtxh_m.Properties.Settings.Default.gtxh_m_com_gtxh_market_MarketAppService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ToOrderCompletedEventHandler ToOrderCompleted;
        
        /// <remarks/>
        public event ResourceDetailCompletedEventHandler ResourceDetailCompleted;
        
        /// <remarks/>
        public event AddResourceCompletedEventHandler AddResourceCompleted;
        
        /// <remarks/>
        public event GetYieldlyCompletedEventHandler GetYieldlyCompleted;
        
        /// <remarks/>
        public event MarketResourceListCompletedEventHandler MarketResourceListCompleted;
        
        /// <remarks/>
        public event MarketResourceListOfYieldlyCompletedEventHandler MarketResourceListOfYieldlyCompleted;
        
        /// <remarks/>
        public event MyMarketResourceListCompletedEventHandler MyMarketResourceListCompleted;
        
        /// <remarks/>
        public event DirectResourceListCompletedEventHandler DirectResourceListCompleted;
        
        /// <remarks/>
        public event FbResourceCompletedEventHandler FbResourceCompleted;
        
        /// <remarks/>
        public event FbDirectResourceCompletedEventHandler FbDirectResourceCompleted;
        
        /// <remarks/>
        public event DirectToOrderCompletedEventHandler DirectToOrderCompleted;
        
        /// <remarks/>
        public event ConfirmOrderCompletedEventHandler ConfirmOrderCompleted;
        
        /// <remarks/>
        public event OutOrderCompletedEventHandler OutOrderCompleted;
        
        /// <remarks/>
        public event ToBeConfirmedOrderListCompletedEventHandler ToBeConfirmedOrderListCompleted;
        
        /// <remarks/>
        public event CompanyInfoCompletedEventHandler CompanyInfoCompleted;
        
        /// <remarks/>
        public event OrderHistoryListCompletedEventHandler OrderHistoryListCompleted;
        
        /// <remarks/>
        public event ResourceOrderDetailCompletedEventHandler ResourceOrderDetailCompleted;
        
        /// <remarks/>
        public event BackResourceCompletedEventHandler BackResourceCompleted;
        
        /// <remarks/>
        public event UploadCredentialCompletedEventHandler UploadCredentialCompleted;
        
        /// <remarks/>
        public event OrderHistoryDetailCompletedEventHandler OrderHistoryDetailCompleted;
        
        /// <remarks/>
        public event TradeOrderListCompletedEventHandler TradeOrderListCompleted;
        
        /// <remarks/>
        public event ToTradeOrderCompletedEventHandler ToTradeOrderCompleted;
        
        /// <remarks/>
        public event BaoBalanceCompletedEventHandler BaoBalanceCompleted;
        
        /// <remarks/>
        public event ValidateCardCompletedEventHandler ValidateCardCompleted;
        
        /// <remarks/>
        public event SendDirectResourceListCompletedEventHandler SendDirectResourceListCompleted;
        
        /// <remarks/>
        public event RegistMarketCompletedEventHandler RegistMarketCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ToOrder(string key, int loginInfoId, long resourceId, int bprice, decimal bweight, string tradeType, string IP) {
            object[] results = this.Invoke("ToOrder", new object[] {
                        key,
                        loginInfoId,
                        resourceId,
                        bprice,
                        bweight,
                        tradeType,
                        IP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ToOrderAsync(string key, int loginInfoId, long resourceId, int bprice, decimal bweight, string tradeType, string IP) {
            this.ToOrderAsync(key, loginInfoId, resourceId, bprice, bweight, tradeType, IP, null);
        }
        
        /// <remarks/>
        public void ToOrderAsync(string key, int loginInfoId, long resourceId, int bprice, decimal bweight, string tradeType, string IP, object userState) {
            if ((this.ToOrderOperationCompleted == null)) {
                this.ToOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnToOrderOperationCompleted);
            }
            this.InvokeAsync("ToOrder", new object[] {
                        key,
                        loginInfoId,
                        resourceId,
                        bprice,
                        bweight,
                        tradeType,
                        IP}, this.ToOrderOperationCompleted, userState);
        }
        
        private void OnToOrderOperationCompleted(object arg) {
            if ((this.ToOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ToOrderCompleted(this, new ToOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResourceDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResourceModel ResourceDetail(string key, long resourceId) {
            object[] results = this.Invoke("ResourceDetail", new object[] {
                        key,
                        resourceId});
            return ((ResourceModel)(results[0]));
        }
        
        /// <remarks/>
        public void ResourceDetailAsync(string key, long resourceId) {
            this.ResourceDetailAsync(key, resourceId, null);
        }
        
        /// <remarks/>
        public void ResourceDetailAsync(string key, long resourceId, object userState) {
            if ((this.ResourceDetailOperationCompleted == null)) {
                this.ResourceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResourceDetailOperationCompleted);
            }
            this.InvokeAsync("ResourceDetail", new object[] {
                        key,
                        resourceId}, this.ResourceDetailOperationCompleted, userState);
        }
        
        private void OnResourceDetailOperationCompleted(object arg) {
            if ((this.ResourceDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResourceDetailCompleted(this, new ResourceDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddResource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddResource(string key, int loginInfoID, int provinceID, int cityID, int sortID, int nsortID, string specs, string materials, string yieldly, int price, decimal weight, string countType, int discount, string cangku, long resourceId) {
            object[] results = this.Invoke("AddResource", new object[] {
                        key,
                        loginInfoID,
                        provinceID,
                        cityID,
                        sortID,
                        nsortID,
                        specs,
                        materials,
                        yieldly,
                        price,
                        weight,
                        countType,
                        discount,
                        cangku,
                        resourceId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddResourceAsync(string key, int loginInfoID, int provinceID, int cityID, int sortID, int nsortID, string specs, string materials, string yieldly, int price, decimal weight, string countType, int discount, string cangku, long resourceId) {
            this.AddResourceAsync(key, loginInfoID, provinceID, cityID, sortID, nsortID, specs, materials, yieldly, price, weight, countType, discount, cangku, resourceId, null);
        }
        
        /// <remarks/>
        public void AddResourceAsync(
                    string key, 
                    int loginInfoID, 
                    int provinceID, 
                    int cityID, 
                    int sortID, 
                    int nsortID, 
                    string specs, 
                    string materials, 
                    string yieldly, 
                    int price, 
                    decimal weight, 
                    string countType, 
                    int discount, 
                    string cangku, 
                    long resourceId, 
                    object userState) {
            if ((this.AddResourceOperationCompleted == null)) {
                this.AddResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResourceOperationCompleted);
            }
            this.InvokeAsync("AddResource", new object[] {
                        key,
                        loginInfoID,
                        provinceID,
                        cityID,
                        sortID,
                        nsortID,
                        specs,
                        materials,
                        yieldly,
                        price,
                        weight,
                        countType,
                        discount,
                        cangku,
                        resourceId}, this.AddResourceOperationCompleted, userState);
        }
        
        private void OnAddResourceOperationCompleted(object arg) {
            if ((this.AddResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResourceCompleted(this, new AddResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYieldly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetYieldly(string key) {
            object[] results = this.Invoke("GetYieldly", new object[] {
                        key});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetYieldlyAsync(string key) {
            this.GetYieldlyAsync(key, null);
        }
        
        /// <remarks/>
        public void GetYieldlyAsync(string key, object userState) {
            if ((this.GetYieldlyOperationCompleted == null)) {
                this.GetYieldlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYieldlyOperationCompleted);
            }
            this.InvokeAsync("GetYieldly", new object[] {
                        key}, this.GetYieldlyOperationCompleted, userState);
        }
        
        private void OnGetYieldlyOperationCompleted(object arg) {
            if ((this.GetYieldlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYieldlyCompleted(this, new GetYieldlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MarketResourceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable MarketResourceList(string key, int pageSize, int pageIndex, int sortID, int nsortID, int provinceID, string yieldlydirect, string spec, int memberId, bool isSearch, out int total) {
            object[] results = this.Invoke("MarketResourceList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        sortID,
                        nsortID,
                        provinceID,
                        yieldlydirect,
                        spec,
                        memberId,
                        isSearch});
            total = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void MarketResourceListAsync(string key, int pageSize, int pageIndex, int sortID, int nsortID, int provinceID, string yieldlydirect, string spec, int memberId, bool isSearch) {
            this.MarketResourceListAsync(key, pageSize, pageIndex, sortID, nsortID, provinceID, yieldlydirect, spec, memberId, isSearch, null);
        }
        
        /// <remarks/>
        public void MarketResourceListAsync(string key, int pageSize, int pageIndex, int sortID, int nsortID, int provinceID, string yieldlydirect, string spec, int memberId, bool isSearch, object userState) {
            if ((this.MarketResourceListOperationCompleted == null)) {
                this.MarketResourceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarketResourceListOperationCompleted);
            }
            this.InvokeAsync("MarketResourceList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        sortID,
                        nsortID,
                        provinceID,
                        yieldlydirect,
                        spec,
                        memberId,
                        isSearch}, this.MarketResourceListOperationCompleted, userState);
        }
        
        private void OnMarketResourceListOperationCompleted(object arg) {
            if ((this.MarketResourceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarketResourceListCompleted(this, new MarketResourceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MarketResourceListOfYieldly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable MarketResourceListOfYieldly(string key, int pageSize, int pageIndex, int sortID, int nsortID, int provinceID, string yieldlydirect, string spec, int memberId, bool isSearch, out int total) {
            object[] results = this.Invoke("MarketResourceListOfYieldly", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        sortID,
                        nsortID,
                        provinceID,
                        yieldlydirect,
                        spec,
                        memberId,
                        isSearch});
            total = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void MarketResourceListOfYieldlyAsync(string key, int pageSize, int pageIndex, int sortID, int nsortID, int provinceID, string yieldlydirect, string spec, int memberId, bool isSearch) {
            this.MarketResourceListOfYieldlyAsync(key, pageSize, pageIndex, sortID, nsortID, provinceID, yieldlydirect, spec, memberId, isSearch, null);
        }
        
        /// <remarks/>
        public void MarketResourceListOfYieldlyAsync(string key, int pageSize, int pageIndex, int sortID, int nsortID, int provinceID, string yieldlydirect, string spec, int memberId, bool isSearch, object userState) {
            if ((this.MarketResourceListOfYieldlyOperationCompleted == null)) {
                this.MarketResourceListOfYieldlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarketResourceListOfYieldlyOperationCompleted);
            }
            this.InvokeAsync("MarketResourceListOfYieldly", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        sortID,
                        nsortID,
                        provinceID,
                        yieldlydirect,
                        spec,
                        memberId,
                        isSearch}, this.MarketResourceListOfYieldlyOperationCompleted, userState);
        }
        
        private void OnMarketResourceListOfYieldlyOperationCompleted(object arg) {
            if ((this.MarketResourceListOfYieldlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarketResourceListOfYieldlyCompleted(this, new MarketResourceListOfYieldlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MyMarketResourceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable MyMarketResourceList(string key, int pageSize, int pageIndex, int sortID, int nsortID, int provinceID, int cityID, string spec, int loginInfoID, string status, out int total) {
            object[] results = this.Invoke("MyMarketResourceList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        sortID,
                        nsortID,
                        provinceID,
                        cityID,
                        spec,
                        loginInfoID,
                        status});
            total = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void MyMarketResourceListAsync(string key, int pageSize, int pageIndex, int sortID, int nsortID, int provinceID, int cityID, string spec, int loginInfoID, string status) {
            this.MyMarketResourceListAsync(key, pageSize, pageIndex, sortID, nsortID, provinceID, cityID, spec, loginInfoID, status, null);
        }
        
        /// <remarks/>
        public void MyMarketResourceListAsync(string key, int pageSize, int pageIndex, int sortID, int nsortID, int provinceID, int cityID, string spec, int loginInfoID, string status, object userState) {
            if ((this.MyMarketResourceListOperationCompleted == null)) {
                this.MyMarketResourceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMyMarketResourceListOperationCompleted);
            }
            this.InvokeAsync("MyMarketResourceList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        sortID,
                        nsortID,
                        provinceID,
                        cityID,
                        spec,
                        loginInfoID,
                        status}, this.MyMarketResourceListOperationCompleted, userState);
        }
        
        private void OnMyMarketResourceListOperationCompleted(object arg) {
            if ((this.MyMarketResourceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MyMarketResourceListCompleted(this, new MyMarketResourceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DirectResourceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable DirectResourceList(string key, int pageSize, int pageIndex, int loginInfoID, int sortID, int nsortID, int provinceID, int cityID, string specs, string mobile, out int totalCount) {
            object[] results = this.Invoke("DirectResourceList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        loginInfoID,
                        sortID,
                        nsortID,
                        provinceID,
                        cityID,
                        specs,
                        mobile});
            totalCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void DirectResourceListAsync(string key, int pageSize, int pageIndex, int loginInfoID, int sortID, int nsortID, int provinceID, int cityID, string specs, string mobile) {
            this.DirectResourceListAsync(key, pageSize, pageIndex, loginInfoID, sortID, nsortID, provinceID, cityID, specs, mobile, null);
        }
        
        /// <remarks/>
        public void DirectResourceListAsync(string key, int pageSize, int pageIndex, int loginInfoID, int sortID, int nsortID, int provinceID, int cityID, string specs, string mobile, object userState) {
            if ((this.DirectResourceListOperationCompleted == null)) {
                this.DirectResourceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDirectResourceListOperationCompleted);
            }
            this.InvokeAsync("DirectResourceList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        loginInfoID,
                        sortID,
                        nsortID,
                        provinceID,
                        cityID,
                        specs,
                        mobile}, this.DirectResourceListOperationCompleted, userState);
        }
        
        private void OnDirectResourceListOperationCompleted(object arg) {
            if ((this.DirectResourceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DirectResourceListCompleted(this, new DirectResourceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FbResource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FbResource(string key, string resourceIds, int loginInfoID, string restype, string pubtype, string IP) {
            object[] results = this.Invoke("FbResource", new object[] {
                        key,
                        resourceIds,
                        loginInfoID,
                        restype,
                        pubtype,
                        IP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FbResourceAsync(string key, string resourceIds, int loginInfoID, string restype, string pubtype, string IP) {
            this.FbResourceAsync(key, resourceIds, loginInfoID, restype, pubtype, IP, null);
        }
        
        /// <remarks/>
        public void FbResourceAsync(string key, string resourceIds, int loginInfoID, string restype, string pubtype, string IP, object userState) {
            if ((this.FbResourceOperationCompleted == null)) {
                this.FbResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFbResourceOperationCompleted);
            }
            this.InvokeAsync("FbResource", new object[] {
                        key,
                        resourceIds,
                        loginInfoID,
                        restype,
                        pubtype,
                        IP}, this.FbResourceOperationCompleted, userState);
        }
        
        private void OnFbResourceOperationCompleted(object arg) {
            if ((this.FbResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FbResourceCompleted(this, new FbResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FbDirectResource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FbDirectResource(string key, int loginInfoID, string mobile, string resourceIds, string IP) {
            object[] results = this.Invoke("FbDirectResource", new object[] {
                        key,
                        loginInfoID,
                        mobile,
                        resourceIds,
                        IP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FbDirectResourceAsync(string key, int loginInfoID, string mobile, string resourceIds, string IP) {
            this.FbDirectResourceAsync(key, loginInfoID, mobile, resourceIds, IP, null);
        }
        
        /// <remarks/>
        public void FbDirectResourceAsync(string key, int loginInfoID, string mobile, string resourceIds, string IP, object userState) {
            if ((this.FbDirectResourceOperationCompleted == null)) {
                this.FbDirectResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFbDirectResourceOperationCompleted);
            }
            this.InvokeAsync("FbDirectResource", new object[] {
                        key,
                        loginInfoID,
                        mobile,
                        resourceIds,
                        IP}, this.FbDirectResourceOperationCompleted, userState);
        }
        
        private void OnFbDirectResourceOperationCompleted(object arg) {
            if ((this.FbDirectResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FbDirectResourceCompleted(this, new FbDirectResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DirectToOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DirectToOrder(string key, string resourceIds, int loginInfoID) {
            object[] results = this.Invoke("DirectToOrder", new object[] {
                        key,
                        resourceIds,
                        loginInfoID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DirectToOrderAsync(string key, string resourceIds, int loginInfoID) {
            this.DirectToOrderAsync(key, resourceIds, loginInfoID, null);
        }
        
        /// <remarks/>
        public void DirectToOrderAsync(string key, string resourceIds, int loginInfoID, object userState) {
            if ((this.DirectToOrderOperationCompleted == null)) {
                this.DirectToOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDirectToOrderOperationCompleted);
            }
            this.InvokeAsync("DirectToOrder", new object[] {
                        key,
                        resourceIds,
                        loginInfoID}, this.DirectToOrderOperationCompleted, userState);
        }
        
        private void OnDirectToOrderOperationCompleted(object arg) {
            if ((this.DirectToOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DirectToOrderCompleted(this, new DirectToOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmOrder(string key, int loginInfoID, long resourceId, long id, string IP) {
            object[] results = this.Invoke("ConfirmOrder", new object[] {
                        key,
                        loginInfoID,
                        resourceId,
                        id,
                        IP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmOrderAsync(string key, int loginInfoID, long resourceId, long id, string IP) {
            this.ConfirmOrderAsync(key, loginInfoID, resourceId, id, IP, null);
        }
        
        /// <remarks/>
        public void ConfirmOrderAsync(string key, int loginInfoID, long resourceId, long id, string IP, object userState) {
            if ((this.ConfirmOrderOperationCompleted == null)) {
                this.ConfirmOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmOrderOperationCompleted);
            }
            this.InvokeAsync("ConfirmOrder", new object[] {
                        key,
                        loginInfoID,
                        resourceId,
                        id,
                        IP}, this.ConfirmOrderOperationCompleted, userState);
        }
        
        private void OnConfirmOrderOperationCompleted(object arg) {
            if ((this.ConfirmOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmOrderCompleted(this, new ConfirmOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OutOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int OutOrder(string key, int loginInfoID, long resourceId, long id) {
            object[] results = this.Invoke("OutOrder", new object[] {
                        key,
                        loginInfoID,
                        resourceId,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void OutOrderAsync(string key, int loginInfoID, long resourceId, long id) {
            this.OutOrderAsync(key, loginInfoID, resourceId, id, null);
        }
        
        /// <remarks/>
        public void OutOrderAsync(string key, int loginInfoID, long resourceId, long id, object userState) {
            if ((this.OutOrderOperationCompleted == null)) {
                this.OutOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOutOrderOperationCompleted);
            }
            this.InvokeAsync("OutOrder", new object[] {
                        key,
                        loginInfoID,
                        resourceId,
                        id}, this.OutOrderOperationCompleted, userState);
        }
        
        private void OnOutOrderOperationCompleted(object arg) {
            if ((this.OutOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OutOrderCompleted(this, new OutOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToBeConfirmedOrderList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ToBeConfirmedOrderList(string key, int pageSize, int pageIndex, int loginInfoID, string status, string role, string startTime, string endTime, out int totalCount) {
            object[] results = this.Invoke("ToBeConfirmedOrderList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        loginInfoID,
                        status,
                        role,
                        startTime,
                        endTime});
            totalCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ToBeConfirmedOrderListAsync(string key, int pageSize, int pageIndex, int loginInfoID, string status, string role, string startTime, string endTime) {
            this.ToBeConfirmedOrderListAsync(key, pageSize, pageIndex, loginInfoID, status, role, startTime, endTime, null);
        }
        
        /// <remarks/>
        public void ToBeConfirmedOrderListAsync(string key, int pageSize, int pageIndex, int loginInfoID, string status, string role, string startTime, string endTime, object userState) {
            if ((this.ToBeConfirmedOrderListOperationCompleted == null)) {
                this.ToBeConfirmedOrderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnToBeConfirmedOrderListOperationCompleted);
            }
            this.InvokeAsync("ToBeConfirmedOrderList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        loginInfoID,
                        status,
                        role,
                        startTime,
                        endTime}, this.ToBeConfirmedOrderListOperationCompleted, userState);
        }
        
        private void OnToBeConfirmedOrderListOperationCompleted(object arg) {
            if ((this.ToBeConfirmedOrderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ToBeConfirmedOrderListCompleted(this, new ToBeConfirmedOrderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompanyInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompanyModel CompanyInfo(string key, int userId) {
            object[] results = this.Invoke("CompanyInfo", new object[] {
                        key,
                        userId});
            return ((CompanyModel)(results[0]));
        }
        
        /// <remarks/>
        public void CompanyInfoAsync(string key, int userId) {
            this.CompanyInfoAsync(key, userId, null);
        }
        
        /// <remarks/>
        public void CompanyInfoAsync(string key, int userId, object userState) {
            if ((this.CompanyInfoOperationCompleted == null)) {
                this.CompanyInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompanyInfoOperationCompleted);
            }
            this.InvokeAsync("CompanyInfo", new object[] {
                        key,
                        userId}, this.CompanyInfoOperationCompleted, userState);
        }
        
        private void OnCompanyInfoOperationCompleted(object arg) {
            if ((this.CompanyInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompanyInfoCompleted(this, new CompanyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrderHistoryList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable OrderHistoryList(string key, int pageSize, int pageIndex, int loginInfoID, string role, string startTime, string endTime, string orderID, out int totalCount) {
            object[] results = this.Invoke("OrderHistoryList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        loginInfoID,
                        role,
                        startTime,
                        endTime,
                        orderID});
            totalCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void OrderHistoryListAsync(string key, int pageSize, int pageIndex, int loginInfoID, string role, string startTime, string endTime, string orderID) {
            this.OrderHistoryListAsync(key, pageSize, pageIndex, loginInfoID, role, startTime, endTime, orderID, null);
        }
        
        /// <remarks/>
        public void OrderHistoryListAsync(string key, int pageSize, int pageIndex, int loginInfoID, string role, string startTime, string endTime, string orderID, object userState) {
            if ((this.OrderHistoryListOperationCompleted == null)) {
                this.OrderHistoryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderHistoryListOperationCompleted);
            }
            this.InvokeAsync("OrderHistoryList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        loginInfoID,
                        role,
                        startTime,
                        endTime,
                        orderID}, this.OrderHistoryListOperationCompleted, userState);
        }
        
        private void OnOrderHistoryListOperationCompleted(object arg) {
            if ((this.OrderHistoryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderHistoryListCompleted(this, new OrderHistoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResourceOrderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResourceModel ResourceOrderDetail(string key, long id) {
            object[] results = this.Invoke("ResourceOrderDetail", new object[] {
                        key,
                        id});
            return ((ResourceModel)(results[0]));
        }
        
        /// <remarks/>
        public void ResourceOrderDetailAsync(string key, long id) {
            this.ResourceOrderDetailAsync(key, id, null);
        }
        
        /// <remarks/>
        public void ResourceOrderDetailAsync(string key, long id, object userState) {
            if ((this.ResourceOrderDetailOperationCompleted == null)) {
                this.ResourceOrderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResourceOrderDetailOperationCompleted);
            }
            this.InvokeAsync("ResourceOrderDetail", new object[] {
                        key,
                        id}, this.ResourceOrderDetailOperationCompleted, userState);
        }
        
        private void OnResourceOrderDetailOperationCompleted(object arg) {
            if ((this.ResourceOrderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResourceOrderDetailCompleted(this, new ResourceOrderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BackResource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BackResource(string key, int loginInfoID, string resourceIds) {
            object[] results = this.Invoke("BackResource", new object[] {
                        key,
                        loginInfoID,
                        resourceIds});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BackResourceAsync(string key, int loginInfoID, string resourceIds) {
            this.BackResourceAsync(key, loginInfoID, resourceIds, null);
        }
        
        /// <remarks/>
        public void BackResourceAsync(string key, int loginInfoID, string resourceIds, object userState) {
            if ((this.BackResourceOperationCompleted == null)) {
                this.BackResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackResourceOperationCompleted);
            }
            this.InvokeAsync("BackResource", new object[] {
                        key,
                        loginInfoID,
                        resourceIds}, this.BackResourceOperationCompleted, userState);
        }
        
        private void OnBackResourceOperationCompleted(object arg) {
            if ((this.BackResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackResourceCompleted(this, new BackResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadCredential", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadCredential(string key, int loginInfoID, string orderID, string imgurl) {
            object[] results = this.Invoke("UploadCredential", new object[] {
                        key,
                        loginInfoID,
                        orderID,
                        imgurl});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadCredentialAsync(string key, int loginInfoID, string orderID, string imgurl) {
            this.UploadCredentialAsync(key, loginInfoID, orderID, imgurl, null);
        }
        
        /// <remarks/>
        public void UploadCredentialAsync(string key, int loginInfoID, string orderID, string imgurl, object userState) {
            if ((this.UploadCredentialOperationCompleted == null)) {
                this.UploadCredentialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadCredentialOperationCompleted);
            }
            this.InvokeAsync("UploadCredential", new object[] {
                        key,
                        loginInfoID,
                        orderID,
                        imgurl}, this.UploadCredentialOperationCompleted, userState);
        }
        
        private void OnUploadCredentialOperationCompleted(object arg) {
            if ((this.UploadCredentialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadCredentialCompleted(this, new UploadCredentialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OrderHistoryDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResourceModel OrderHistoryDetail(string key, long id, int loginInfoID) {
            object[] results = this.Invoke("OrderHistoryDetail", new object[] {
                        key,
                        id,
                        loginInfoID});
            return ((ResourceModel)(results[0]));
        }
        
        /// <remarks/>
        public void OrderHistoryDetailAsync(string key, long id, int loginInfoID) {
            this.OrderHistoryDetailAsync(key, id, loginInfoID, null);
        }
        
        /// <remarks/>
        public void OrderHistoryDetailAsync(string key, long id, int loginInfoID, object userState) {
            if ((this.OrderHistoryDetailOperationCompleted == null)) {
                this.OrderHistoryDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderHistoryDetailOperationCompleted);
            }
            this.InvokeAsync("OrderHistoryDetail", new object[] {
                        key,
                        id,
                        loginInfoID}, this.OrderHistoryDetailOperationCompleted, userState);
        }
        
        private void OnOrderHistoryDetailOperationCompleted(object arg) {
            if ((this.OrderHistoryDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderHistoryDetailCompleted(this, new OrderHistoryDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TradeOrderList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable TradeOrderList(string key, int pageSize, int pageIndex, int loginInfoID, string role, string startTime, string endTime, out int totalCount) {
            object[] results = this.Invoke("TradeOrderList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        loginInfoID,
                        role,
                        startTime,
                        endTime});
            totalCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void TradeOrderListAsync(string key, int pageSize, int pageIndex, int loginInfoID, string role, string startTime, string endTime) {
            this.TradeOrderListAsync(key, pageSize, pageIndex, loginInfoID, role, startTime, endTime, null);
        }
        
        /// <remarks/>
        public void TradeOrderListAsync(string key, int pageSize, int pageIndex, int loginInfoID, string role, string startTime, string endTime, object userState) {
            if ((this.TradeOrderListOperationCompleted == null)) {
                this.TradeOrderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTradeOrderListOperationCompleted);
            }
            this.InvokeAsync("TradeOrderList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        loginInfoID,
                        role,
                        startTime,
                        endTime}, this.TradeOrderListOperationCompleted, userState);
        }
        
        private void OnTradeOrderListOperationCompleted(object arg) {
            if ((this.TradeOrderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TradeOrderListCompleted(this, new TradeOrderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToTradeOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ToTradeOrder(string key, long id, string role, int isSuccess, string IP) {
            object[] results = this.Invoke("ToTradeOrder", new object[] {
                        key,
                        id,
                        role,
                        isSuccess,
                        IP});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ToTradeOrderAsync(string key, long id, string role, int isSuccess, string IP) {
            this.ToTradeOrderAsync(key, id, role, isSuccess, IP, null);
        }
        
        /// <remarks/>
        public void ToTradeOrderAsync(string key, long id, string role, int isSuccess, string IP, object userState) {
            if ((this.ToTradeOrderOperationCompleted == null)) {
                this.ToTradeOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnToTradeOrderOperationCompleted);
            }
            this.InvokeAsync("ToTradeOrder", new object[] {
                        key,
                        id,
                        role,
                        isSuccess,
                        IP}, this.ToTradeOrderOperationCompleted, userState);
        }
        
        private void OnToTradeOrderOperationCompleted(object arg) {
            if ((this.ToTradeOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ToTradeOrderCompleted(this, new ToTradeOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BaoBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double BaoBalance(string key, int loginInfoID) {
            object[] results = this.Invoke("BaoBalance", new object[] {
                        key,
                        loginInfoID});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void BaoBalanceAsync(string key, int loginInfoID) {
            this.BaoBalanceAsync(key, loginInfoID, null);
        }
        
        /// <remarks/>
        public void BaoBalanceAsync(string key, int loginInfoID, object userState) {
            if ((this.BaoBalanceOperationCompleted == null)) {
                this.BaoBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBaoBalanceOperationCompleted);
            }
            this.InvokeAsync("BaoBalance", new object[] {
                        key,
                        loginInfoID}, this.BaoBalanceOperationCompleted, userState);
        }
        
        private void OnBaoBalanceOperationCompleted(object arg) {
            if ((this.BaoBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BaoBalanceCompleted(this, new BaoBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ValidateCard(string key, int loginInfoID) {
            object[] results = this.Invoke("ValidateCard", new object[] {
                        key,
                        loginInfoID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateCardAsync(string key, int loginInfoID) {
            this.ValidateCardAsync(key, loginInfoID, null);
        }
        
        /// <remarks/>
        public void ValidateCardAsync(string key, int loginInfoID, object userState) {
            if ((this.ValidateCardOperationCompleted == null)) {
                this.ValidateCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateCardOperationCompleted);
            }
            this.InvokeAsync("ValidateCard", new object[] {
                        key,
                        loginInfoID}, this.ValidateCardOperationCompleted, userState);
        }
        
        private void OnValidateCardOperationCompleted(object arg) {
            if ((this.ValidateCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCardCompleted(this, new ValidateCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDirectResourceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SendDirectResourceList(string key, int pageSize, int pageIndex, int loginInfoID, int sortID, int nsortID, int provinceID, int cityID, string specs, string mobile, out int totalCount) {
            object[] results = this.Invoke("SendDirectResourceList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        loginInfoID,
                        sortID,
                        nsortID,
                        provinceID,
                        cityID,
                        specs,
                        mobile});
            totalCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SendDirectResourceListAsync(string key, int pageSize, int pageIndex, int loginInfoID, int sortID, int nsortID, int provinceID, int cityID, string specs, string mobile) {
            this.SendDirectResourceListAsync(key, pageSize, pageIndex, loginInfoID, sortID, nsortID, provinceID, cityID, specs, mobile, null);
        }
        
        /// <remarks/>
        public void SendDirectResourceListAsync(string key, int pageSize, int pageIndex, int loginInfoID, int sortID, int nsortID, int provinceID, int cityID, string specs, string mobile, object userState) {
            if ((this.SendDirectResourceListOperationCompleted == null)) {
                this.SendDirectResourceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDirectResourceListOperationCompleted);
            }
            this.InvokeAsync("SendDirectResourceList", new object[] {
                        key,
                        pageSize,
                        pageIndex,
                        loginInfoID,
                        sortID,
                        nsortID,
                        provinceID,
                        cityID,
                        specs,
                        mobile}, this.SendDirectResourceListOperationCompleted, userState);
        }
        
        private void OnSendDirectResourceListOperationCompleted(object arg) {
            if ((this.SendDirectResourceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDirectResourceListCompleted(this, new SendDirectResourceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistMarket", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RegistMarket(string key, int loginInfoID, string IP) {
            object[] results = this.Invoke("RegistMarket", new object[] {
                        key,
                        loginInfoID,
                        IP});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RegistMarketAsync(string key, int loginInfoID, string IP) {
            this.RegistMarketAsync(key, loginInfoID, IP, null);
        }
        
        /// <remarks/>
        public void RegistMarketAsync(string key, int loginInfoID, string IP, object userState) {
            if ((this.RegistMarketOperationCompleted == null)) {
                this.RegistMarketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistMarketOperationCompleted);
            }
            this.InvokeAsync("RegistMarket", new object[] {
                        key,
                        loginInfoID,
                        IP}, this.RegistMarketOperationCompleted, userState);
        }
        
        private void OnRegistMarketOperationCompleted(object arg) {
            if ((this.RegistMarketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistMarketCompleted(this, new RegistMarketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResourceModel {
        
        private System.Nullable<int> dxIdField;
        
        private int loginInfoIDField;
        
        private int userIDField;
        
        private decimal ysIndexField;
        
        private int statusField;
        
        private long resourceIdField;
        
        private int sortIDField;
        
        private int nsortIDField;
        
        private int provinceIDField;
        
        private int cityIDField;
        
        private string mobileField;
        
        private string tel400Field;
        
        private string provinceNameField;
        
        private string cityNameField;
        
        private string sortNameField;
        
        private string nsortNameField;
        
        private string specField;
        
        private string materialsField;
        
        private string yieldlyField;
        
        private string cangKuField;
        
        private string discussField;
        
        private int priceField;
        
        private int discountField;
        
        private decimal weightField;
        
        private string countTypeField;
        
        private System.DateTime publishTimeField;
        
        private System.Nullable<int> dxIdField1;
        
        private int clientInfoIDField;
        
        private string tradeTypeField;
        
        private System.DateTime bookTimeField;
        
        private int currentStateField;
        
        private int isTradeNoticeField;
        
        private System.DateTime tradeTimeField;
        
        private string orderIDField;
        
        private string pzStatusField;
        
        private string addressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> dxId {
            get {
                return this.dxIdField;
            }
            set {
                this.dxIdField = value;
            }
        }
        
        /// <remarks/>
        public int LoginInfoID {
            get {
                return this.loginInfoIDField;
            }
            set {
                this.loginInfoIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal YsIndex {
            get {
                return this.ysIndexField;
            }
            set {
                this.ysIndexField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public long ResourceId {
            get {
                return this.resourceIdField;
            }
            set {
                this.resourceIdField = value;
            }
        }
        
        /// <remarks/>
        public int SortID {
            get {
                return this.sortIDField;
            }
            set {
                this.sortIDField = value;
            }
        }
        
        /// <remarks/>
        public int NsortID {
            get {
                return this.nsortIDField;
            }
            set {
                this.nsortIDField = value;
            }
        }
        
        /// <remarks/>
        public int ProvinceID {
            get {
                return this.provinceIDField;
            }
            set {
                this.provinceIDField = value;
            }
        }
        
        /// <remarks/>
        public int CityID {
            get {
                return this.cityIDField;
            }
            set {
                this.cityIDField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string Tel400 {
            get {
                return this.tel400Field;
            }
            set {
                this.tel400Field = value;
            }
        }
        
        /// <remarks/>
        public string ProvinceName {
            get {
                return this.provinceNameField;
            }
            set {
                this.provinceNameField = value;
            }
        }
        
        /// <remarks/>
        public string CityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
        
        /// <remarks/>
        public string SortName {
            get {
                return this.sortNameField;
            }
            set {
                this.sortNameField = value;
            }
        }
        
        /// <remarks/>
        public string NsortName {
            get {
                return this.nsortNameField;
            }
            set {
                this.nsortNameField = value;
            }
        }
        
        /// <remarks/>
        public string Spec {
            get {
                return this.specField;
            }
            set {
                this.specField = value;
            }
        }
        
        /// <remarks/>
        public string Materials {
            get {
                return this.materialsField;
            }
            set {
                this.materialsField = value;
            }
        }
        
        /// <remarks/>
        public string Yieldly {
            get {
                return this.yieldlyField;
            }
            set {
                this.yieldlyField = value;
            }
        }
        
        /// <remarks/>
        public string CangKu {
            get {
                return this.cangKuField;
            }
            set {
                this.cangKuField = value;
            }
        }
        
        /// <remarks/>
        public string Discuss {
            get {
                return this.discussField;
            }
            set {
                this.discussField = value;
            }
        }
        
        /// <remarks/>
        public int Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public int Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        public decimal Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public string CountType {
            get {
                return this.countTypeField;
            }
            set {
                this.countTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PublishTime {
            get {
                return this.publishTimeField;
            }
            set {
                this.publishTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DxId {
            get {
                return this.dxIdField1;
            }
            set {
                this.dxIdField1 = value;
            }
        }
        
        /// <remarks/>
        public int ClientInfoID {
            get {
                return this.clientInfoIDField;
            }
            set {
                this.clientInfoIDField = value;
            }
        }
        
        /// <remarks/>
        public string TradeType {
            get {
                return this.tradeTypeField;
            }
            set {
                this.tradeTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BookTime {
            get {
                return this.bookTimeField;
            }
            set {
                this.bookTimeField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentState {
            get {
                return this.currentStateField;
            }
            set {
                this.currentStateField = value;
            }
        }
        
        /// <remarks/>
        public int IsTradeNotice {
            get {
                return this.isTradeNoticeField;
            }
            set {
                this.isTradeNoticeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TradeTime {
            get {
                return this.tradeTimeField;
            }
            set {
                this.tradeTimeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public string PzStatus {
            get {
                return this.pzStatusField;
            }
            set {
                this.pzStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CompanyModel {
        
        private int memberIdField;
        
        private string companyNameField;
        
        private string userNameField;
        
        private string mobileField;
        
        private string telField;
        
        private string addressField;
        
        /// <remarks/>
        public int MemberId {
            get {
                return this.memberIdField;
            }
            set {
                this.memberIdField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string Tel {
            get {
                return this.telField;
            }
            set {
                this.telField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ToOrderCompletedEventHandler(object sender, ToOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ToOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ToOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResourceDetailCompletedEventHandler(object sender, ResourceDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResourceDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResourceDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResourceModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResourceModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddResourceCompletedEventHandler(object sender, AddResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetYieldlyCompletedEventHandler(object sender, GetYieldlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYieldlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYieldlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MarketResourceListCompletedEventHandler(object sender, MarketResourceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarketResourceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MarketResourceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MarketResourceListOfYieldlyCompletedEventHandler(object sender, MarketResourceListOfYieldlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarketResourceListOfYieldlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MarketResourceListOfYieldlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MyMarketResourceListCompletedEventHandler(object sender, MyMarketResourceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MyMarketResourceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MyMarketResourceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DirectResourceListCompletedEventHandler(object sender, DirectResourceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DirectResourceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DirectResourceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FbResourceCompletedEventHandler(object sender, FbResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FbResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FbResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FbDirectResourceCompletedEventHandler(object sender, FbDirectResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FbDirectResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FbDirectResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DirectToOrderCompletedEventHandler(object sender, DirectToOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DirectToOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DirectToOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConfirmOrderCompletedEventHandler(object sender, ConfirmOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OutOrderCompletedEventHandler(object sender, OutOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OutOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OutOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ToBeConfirmedOrderListCompletedEventHandler(object sender, ToBeConfirmedOrderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ToBeConfirmedOrderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ToBeConfirmedOrderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CompanyInfoCompletedEventHandler(object sender, CompanyInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompanyInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompanyInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompanyModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompanyModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OrderHistoryListCompletedEventHandler(object sender, OrderHistoryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderHistoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderHistoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ResourceOrderDetailCompletedEventHandler(object sender, ResourceOrderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResourceOrderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResourceOrderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResourceModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResourceModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BackResourceCompletedEventHandler(object sender, BackResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UploadCredentialCompletedEventHandler(object sender, UploadCredentialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadCredentialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadCredentialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void OrderHistoryDetailCompletedEventHandler(object sender, OrderHistoryDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderHistoryDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderHistoryDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResourceModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResourceModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TradeOrderListCompletedEventHandler(object sender, TradeOrderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TradeOrderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TradeOrderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ToTradeOrderCompletedEventHandler(object sender, ToTradeOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ToTradeOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ToTradeOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BaoBalanceCompletedEventHandler(object sender, BaoBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BaoBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BaoBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateCardCompletedEventHandler(object sender, ValidateCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendDirectResourceListCompletedEventHandler(object sender, SendDirectResourceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDirectResourceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDirectResourceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegistMarketCompletedEventHandler(object sender, RegistMarketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegistMarketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegistMarketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591